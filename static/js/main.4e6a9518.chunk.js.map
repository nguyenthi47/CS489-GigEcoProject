{"version":3,"sources":["Consent.js","LikertScale.js","Rate.js","Job.js","ProgressBar.js","Study.js","Data.js","Demographics.js","App.js","reportWebVitals.js","index.js"],"names":["Consent","className","style","textAlign","Button","variant","onClick","this","props","skipStage","React","Component","LikertScale","items","i","n","push","demographics","marginLeft","multipleText","display","leftText","map","option","opIdx","vertical","margin","type","id","question","name","saveResponse","answers","rightText","RateJob","handleChange","bind","state","value","hover","e","newValue","setState","classes","root","Rating","size","qIdx","jobIdx","checkJobEval","precision","onChange","onChangeActive","event","newHover","withStyles","theme","width","alignItems","useStyles","makeStyles","cardHeader","backgroundColor","palette","grey","rows","idx","label","JobCard","bullet","Card","CardHeader","title","titleTypographyProps","align","subheaderTypographyProps","action","CardContent","row","rowIdx","Typography","component","jobSpecs","Divider","Rate","ProgressBar","Fragment","LinearProgress","Study","choice","nextScenario","q","v","saveTime","checkList","checkIfSkip","alert","CssBaseline","Container","maxWidth","instruction","color","gutterBottom","marginTop","Grid","container","spacing","pairs","item","sm","md","checkChoice","padding","attCheck","ul","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","cardStudy","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","getNRandomItems","sort","Math","random","slice","demographicsIds","questions","text","options","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Demographics","checkDemographics","group","groupIdx","length","currId","App","data","stages","time","Date","getRandomPairs","responses","saveToFirebase","redirectToSurveyCompletion","firebase","apps","initializeApp","job","count","rand","round","allResponses","times","keyTime","database","ref","set","catch","error","console","log","then","window","open","varNames","answer","tmp","nameTime","delta_time","stage","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e6a9518.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\n\nclass Consent extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"Title\">Record of Consent</div>\n                    <div className=\"Text\">\n                        In this survey, we will present you with some job advertisements and we would like to know which ones you would prefer if you were looking for a job.\n                        <p style={{\"fontWeight\": \"bold\"}}>We are not looking for the correct answers, but your opinion on the matter.</p>\n                        <p className=\"Question Spotlight\">Please, read all the information provided in this survey carefully.</p>\n                        <div>\n                        <hr/>\n                        <div className=\"Subtitle\">\n                            Record of Consent\n                        </div>\n                        The purpose of this research is to understand people's opinion about the future of work, particularly the gig economy. This experiment is composed of an online survey that takes less than 20 minutes to complete. Your responses will be used for research purposes only. Your responses may be shared with other researchers; all information, however, will be anonymized and allow no inference on any particular individual. \n                        Results will be published only as aggregate statistics, allowing no inference on any particular individual. Your participation is voluntary and you may withdraw from the study at any time without any penalty. To withdraw, simply close your browser.\n                        <div>\n                        This study is being conducted as a class project for the Computer Ethics and Social Issues (CS489) course at KAIST.\n                        </div>\n                        <br/>\n                        Please contact the research administrator (gcamilo7@gmail.com) if you have any questions. Thank you!\n                        <br/>\n                        <span className=\"Question\">Clicking <span className=\"Spotlight\">next</span> below indicates that you have understood the information and consent to your participation.</span>\n                        </div>\n                        <hr/>\n                    </div>\n                    <div style={{textAlign: \"right\"}}>\n                        <Button variant=\"secondary\" onClick={this.props.skipStage}>Next</Button>\n                    </div>\n            </div>\n        );\n    }\n\n    \n}\n\nexport default Consent;","import React, { Component } from 'react';\nimport './App.css';\n\nclass LikertScale extends Component{\n    render() {\n        const items = [];\n        for (let i = 0; i < this.props.n; i++) {\n            items.push(i);\n        }\n        return (\n            <div className=\"LikertScale\"\n                style={(!this.props.demographics) ? {textAlign: \"left\", marginLeft: \"10px\"} : {}}>\n                {!this.props.multipleText ? <span style={{display: \"inline-block\"}} className=\"Text\">{this.props.leftText}</span> : <span></span>}\n                {items.map((option, opIdx) => (\n                    <div key={opIdx} style={{display: (this.props.multipleText && !this.props.vertical) ? \"inline-block\" : \"inline\", margin: \"0px 5px 0px 5px\",\n                    \"textAlign\": \"center\"}}>\n                        <input key={this.props.question + opIdx} \n                        type=\"radio\" \n                        className=\"scalePoint\"\n                        id={this.props.question + opIdx}\n                        name={this.props.question} \n                        onClick={() => this.props.saveResponse(this.props.question, !this.props.multipleText ? opIdx : this.props.answers[opIdx])}\n                        style={{\"marginBottom\": \"0px\", \"marginTop\": \"2px\"}}/>\n                        {(this.props.multipleText) ? \n                        <label style={{\"display\": \"block\",\"marginLeft\": \"5px\", \"marginTop\": \"0px\",\n                         \"marginBottom\": \"0px\", \"marginRight\": \"5px\",\n                          \"textAlign\": (this.props.vertical) ? \"left\" : \"center\"}}>{this.props.answers[opIdx]}</label> :\n                        <span></span>}\n                    </div>\n                ))}\n                {!this.props.multipleText ? <span style={{display: \"inline-block\"}} className=\"Text\">{this.props.rightText}</span> : <span></span>}\n            </div>\n        );\n    }\n}\n\nexport default LikertScale;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport './App.css';\n\nconst labels = {\n  1: 'Not willing at all',\n  2: 'Not really willing',\n  3: 'Undecided',\n  4: 'Somewhat willing',\n  5: 'Willing',\n};\n\nconst styles = theme => ({\n  root: {\n    width: 200,\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nclass RateJob extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      value: null,\n      hover: -1\n    }\n  }\n\n  handleChange(e, newValue) {\n    this.setState({value: newValue});\n    this.props.saveResponse(this.props.question, newValue);\n  }\n\n  render() {\n  const {classes} = this.props;\n  return (\n    <div className={classes.root}>\n      <Rating\n        size=\"large\"\n        name={\"rating-pair-\" + this.props.qIdx + \"-jobIdx-\" + this.props.jobIdx}\n        value={(typeof(this.props.checkJobEval(this.props.question)) === \"undefined\")? null : this.props.checkJobEval(this.props.question)}\n        precision={1}\n        onChange={this.handleChange}\n        onChangeActive={(event, newHover) => {\n          this.setState({hover: newHover});\n        }}\n      />\n      {/* {this.state.value !== null && <Box>{labels[this.state.hover !== -1 ? this.state.hover : this.state.value]}</Box>} */}\n    </div>\n  );\n  }\n}\n\nexport default withStyles(styles) (RateJob);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport RateJob from './Rate.js'\nimport Divider from '@material-ui/core/Divider';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst useStyles = makeStyles((theme) => ({\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n}));\n\nconst rows = [\n  {idx: \"Working hours (time period)\", label: \"Working Hours\"},\n  {idx: \"Working hours (length)\", label: \"Work Length\"},\n  {idx: \"Salary\", label: \"Salary\"},\n  {idx: \"Day off\", label: \"Holiday\"},\n  {idx: \"Evaluation\", label: \"Evaluation Frequency\"},\n  {idx: \"Direct Supervisor\", label: \"Direct Supervisor\"},\n  {idx: \"Working Options (companies in same sector)\", label: \"Allowed to Work for Competitor\"}\n\n];\n\nexport default function JobCard(props) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card>\n      <CardHeader\n        title={props.title}\n        titleTypographyProps={{ align: 'center' }}\n        subheaderTypographyProps={{ align: 'center' }}\n        action={null}\n        className={classes.cardHeader}\n      />\n      <CardContent>\n        <ul>\n          {rows.map((row, rowIdx) => (\n            <Typography component=\"li\" variant=\"subtitle1\" align=\"left\" key={rowIdx}>\n              <b>{row.label}</b>: {props.jobSpecs[row.idx]}\n              {/* {row.label + \": \" + props.jobSpecs[row.idx]} */}\n            </Typography>\n          ))}\n        </ul>\n        <br/>\n        <Divider />\n        <br/>\n            <Typography component=\"p\" variant=\"body1\" align=\"left\">\n                Please rate the job above:\n            </Typography>\n        <div>\n          <RateJob \n            jobIdx = {props.jobIdx}\n            qIdx = {props.qIdx}\n            saveResponse = {props.saveResponse}\n            question = {props.question}\n            checkJobEval = {props.checkJobEval}\n          />\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst normalise = value => (value) * 100 / 10;\n\n// Example component that utilizes the `normalise` function at the point of render.\nfunction ProgressBar(props) {\n  return (\n    <React.Fragment>\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\n    </React.Fragment>\n  )\n}\n\nexport default ProgressBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport LikertScale from './LikertScale';\nimport JobCard from './Job';\nimport ProgressBar from './ProgressBar';\n\nconst styles = theme => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  instruction: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  choice: {\n    padding: theme.spacing(3, 0, 6),\n    textAlign: \"center\"\n  },\n  cardHeader: {\n    backgroundColor:\n    theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardStudy: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n});\n\nclass Study extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      idx: -1,\n      choice: null\n    }\n\n    this.nextScenario = this.nextScenario.bind(this);\n  }\n\n  saveResponse(q, v) {\n    this.props.saveResponse(q, v);\n    this.setState({choice: v});\n  }\n\n  nextScenario() {\n    if (this.state.idx === -1) {\n      this.props.saveTime(\"introEnd\")\n      this.setState({\n        idx: this.state.idx + 1\n      })\n      return;\n    }\n\n    var checkList = [\"choice\" + this.state.idx, \"j\" + this.state.idx + \"-2\", \"j\" + this.state.idx + \"-1\"];\n    if (this.props.checkIfSkip(checkList)) {\n      if (this.state.idx === 9) {\n        this.props.skipStage();\n      } else {\n        this.props.saveTime(\"scenario\" +  this.state.idx + \"end\")\n        this.setState({\n          idx: this.state.idx + 1\n        })\n      }\n    } else {\n      alert(\"Please answer all questions.\");\n    }\n\n  }\n  \n  render() {\n    const { classes } = this.props;\n    let content;\n    if (this.state.idx === -1) {\n      content = <React.Fragment>\n      <CssBaseline />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.instruction}>\n        <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\n          Instructions\n        </Typography>\n        <Typography component=\"h1\" variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          We will present you various job listings and we would like to know what you think about them.\n          <br/>\n          Each listing will be composed of various attributes. Please read the information below about them.\n        </Typography>\n        <hr/>\n        <Typography variant=\"subtitle1\"  color=\"textSecondary\" component=\"div\">\n          <b>Working hours (time period)</b>: from when to when you would have to work (e.g., 9am-5pm, totally flexible).\n          <br/>\n          <b>Working hours (length)</b>: the minimum numbers of hours you would have to work (e.g., minimum 8 hours).\n          <br/>\n          <b>Salary</b>: how your salary would be calculated on a weekly basis (e.g., base salary + hourly salary).\n          <br/>\n          <b>Holiday</b>: the job's holiday policy (e.g., paid, but with restrictions).\n          <br/>\n          <b>Evaluation Frequency</b>: how frequently you would be evaluated by your supervisor (e.g., yearly, daily).\n          <br/>\n          <b>Direct Supervisor</b>: whether you would have a direct supervisor, and if the supervisor would be a human or an algorithm (e.g., yes, no, an algorithm).\n          <br/>\n          <b>Allowed to Work for Competitor</b>: whether you would be allowed to work for a competitor at the same time (e.g., work for Uber and Lyft).\n        </Typography>\n      </Container>\n        <div style={{textAlign: \"right\"}}>\n          <hr style={{marginTop: \"10px\"}}/>\n          <Button variant=\"contained\" onClick={this.nextScenario}>Next</Button>\n        </div>\n      </React.Fragment>\n    } else {\n      content = <React.Fragment>\n      <CssBaseline />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.instruction}>\n        <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\n          Instructions\n        </Typography>\n        <Typography variant=\"body1\"  color=\"textSecondary\" component=\"p\">\n          Please read the following job listings for professional drivers below. <br/>\n          We would like to know your opinion about both of them and which one you would prefer to take if you were given the chance.\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5} alignItems = \"flex\">\n          {this.props.pairs[this.state.idx].map((jobSpecs, jobIdx) => (\n            <Grid item key={jobIdx} sm={12} md={6} style={{display: 'flex'}}>\n              <JobCard \n                jobIdx = {jobIdx}\n                qIdx = {this.state.idx}\n                title = {\"Job Listing \" + (jobIdx + 1)}\n                saveResponse = {this.props.saveResponse}\n                question = {\"j\" + this.state.idx + \"-\" + (jobIdx + 1)}\n                jobSpecs = {jobSpecs}\n                checkJobEval = {this.props.checkJobEval}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.choice}>\n        <Typography component=\"h1\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\n          Which one of the two job listings above do you prefer? \n        </Typography>\n        <Typography variant=\"body1\"  color=\"textSecondary\" component=\"p\">\n          <Button variant=\"contained\"\n          color={(this.props.checkChoice(\"choice\" + this.state.idx) === 1)? \"primary\": \"default\"}\n          onClick={() => this.saveResponse(\"choice\" + this.state.idx, 1)}>Job Listing 1</Button>\n          <span style={{padding: \"25px\"}}></span>\n          <Button variant=\"contained\" \n          color={(this.props.checkChoice(\"choice\" + this.state.idx) === 2)? \"primary\": \"default\"}\n          onClick={() => this.saveResponse(\"choice\" + this.state.idx, 2)}\n          >Job Listing 2</Button>\n        </Typography>\n      </Container>\n      <div style={{textAlign: \"right\"}}>\n        <hr style={{marginTop: \"10px\"}}/>\n        <Button variant=\"contained\" onClick={this.nextScenario}>Next</Button>\n        <br/>\n        <br/>\n        <div style={{display: (this.state.attCheck) ? \"none\" : \"block\", textAlign: \"left\"}}>{this.state.idx + 1}/10</div>\n        <div> <ProgressBar value= {this.state.idx + 1}/> </div>\n      </div>\n    </React.Fragment>\n    }\n    return (\n      content\n    );\n  }\n}\n\nexport default withStyles(styles) (Study);\n\n// import React from 'react';\n// import './App.css';\n// import LikertScale from './LikertScale';\n// import Button from 'react-bootstrap/Button';\n// import Table from './Table.js';\n// \n// class Study extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             idx: 0\n//         }\n// \n//         this.nextScenario = this.nextScenario.bind(this);\n//     }\n// \n//     nextScenario() {\n//         var checkList = [\"choice\" + this.state.idx, \"j\" + this.state.idx + \"-2\", \"j\" + this.state.idx + \"-1\"];\n//         if (this.props.checkIfSkip(checkList)) {\n//             if (this.state.idx === 15) {\n//                 this.props.skipStage();\n//             } else {\n//                 this.props.saveTime(\"scenario\" +  this.state.idx + \"end\")\n//                 this.setState({\n//                     idx: this.state.idx + 1\n//                 })\n//             }\n//         } else {\n//             alert(\"Please answer all questions.\");\n//         }\n// \n//     }\n// \n//     render() {\n//         let content;\n//         content = \n//             <div>\n//                 <div className=\"Subtitle\" style={{marginBottom: \"10px\"}}>\n//                     Please read the following job listings for professional drivers below.\n//                 </div>\n//                 <div className=\"BigText\" style={{marginTop: \"10px\"}}>\n//                     We would like to know your opinion about both of them and which one you would prefer to take if you were given the chance to choose.\n//                 </div>\n//                 <hr/>\n//                 <div>\n//                     <div>\n//                         <Table pair={this.props.pairs[this.state.idx]}/>\n//                     </div>\n//                 </div>\n//                 <hr/>\n//                 <div>\n//                     <div>\n//                         <div className=\"QuestionMargin Question\">\n//                             To what extent would you be willing to accept <span className=\"underline\">job listing 1</span>?\n//                         </div>\n//                         <LikertScale\n//                             n={5}\n//                             currId={this.state.idx}\n//                             saveResponse={this.props.saveResponse}\n//                             question={\"j\" + this.state.idx + \"-1\"}\n//                             multipleText={true}\n//                             answers={[\"Not willing at all\", \"Not really willing\", \"Undecided\", \"Somewhat willing\", \"Willing\"]}\n//                         />\n//                     </div>\n// \n//                     <div>\n//                         <div className=\"QuestionMargin Question\">\n//                             To what extent would you be willing to accept <span className=\"underline\">job listing 2</span>?\n//                         </div>\n//                         <LikertScale\n//                             n={5}\n//                             currId={this.state.idx}\n//                             saveResponse={this.props.saveResponse}\n//                             question={\"j\" + this.state.idx + \"-2\"}\n//                             multipleText={true}\n//                             answers={[\"Not willing at all\", \"Not really willing\", \"Undecided\", \"Somewhat willing\", \"Willing\"]}\n//                         />\n//                     </div>\n// \n// \n//                     <div>\n//                         <div className=\"QuestionMargin Question\">\n//                             Which one of the two job listings above do you prefer?\n//                         </div>\n//                         <LikertScale\n//                             n={2}\n//                             currId={this.state.idx}\n//                             saveResponse={this.props.saveResponse}\n//                             question={\"choice\" + this.state.idx}\n//                             multipleText={true}\n//                             answers={[\"Job Listing 1\", \"Job Listing 2\"]}\n//                         />\n//                     </div>\n//                     \n//                 </div>\n//                 <hr style={{marginTop: \"30px\"}}/>\n//                 <div style={{textAlign: \"right\"}}>\n//                     <Button variant=\"secondary\" onClick={this.nextScenario}>Next</Button>\n//                     <div style={{display: (this.state.attCheck) ? \"none\" : \"block\", textAlign: \"left\"}}>{this.state.idx + 1}/16</div>\n//                 </div>\n//             </div>\n//         return(\n  //             <div>\n//                 {content}\n//             </div>\n//         );\n//     }\n// \n// }\n  // \n","export function getNRandomItems(items, n) {\n    const shuffled = items.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, n);\n}\n\nexport const demographicsIds = \n    [\"gender\", \"age\", \"income\", \"politics\", \"education\", \"gigEver\", \"gigBenefit\", \"gigWorkers\"];\n\nexport const demographics = [\n    {id: \"personalData\", questions: [\n        {id: \"gender\", text: \"What is your gender?\", options: [\"Female\", \"Male\", \"Non-binary\", \"Other\", \"Prefer not to respond\"]},\n        {id: \"age\", text: \"How old are you?\", options: [\"Less than 18 years old\", \"18-24 years old\", \"25-34 years old\", \"35-44 years old\", \"45-54 years old\", \"55-64 years old\", \"More than 64 years old\", \"Prefer not to respond\"]},\n        {id: \"income\", text: \"What is your (household) income level?\", options: [\"Less than $20,000\", \"$20,000-$39,999\", \"$40,000-$59,999\", \"$60,000-$79,999\", \"$80,000-$99,999\", \"$100,000-$150,000\", \"More than $150,000\", \"Prefer not to respond\"]},\n        {id: \"politics\", text: \"How would you describe your political views?\", options: [\"Liberal\", \"Somewhat liberal\", \"Moderate\", \"Somewhat conservative\", \"Conservative\", \"Prefer not to respond\"]},\n        {id: \"education\", text: \"What is the highest level of education you have completed?\", options: [\"High school or lower\", \"Some college\", \"Associate degree or lower\", \"Bachelor's degree or lower\", \"Graduate degree\", \"Prefer not to respond\"]},\n        {id: \"race\", text: \"How would you describe yourself in terms of race?\", options: [\"African American\", \"Asian\", \"Caucasian\", \"Hispanic\", \"Other\", \"Prefer not to respond\"]}\n    ]},\n    {id: \"experience\", questions: [\n        {id: \"gigEver\", text: \"Have you ever participated in the gig economy as a worker? (e.g., Uber, Mechanical Turk)\", options: [\"Yes\", \"No\", \"I am not sure\", \"Prefer not to respond\"]},\n        {id: \"gigBenefit\", text: \"Do you think the gig economy (e.g., Uber, Mechanical Turk) is overall beneficial to society?\", options: [\"Yes\", \"No\", \"I am not sure\", \"Prefer not to respond\"]},\n        {id: \"gigWorkers\", text: \"Do you think gig workers (e.g., for Uber, Mechanical Turk) should generally be employees or contractors?\", options: [\"Employees\", \"Contractors\", \"I am not sure\", \"Prefer not to respond\"]},\n    ]},\n];\n\nexport const config = {\n    apiKey: \"AIzaSyBRZMYFURGX03kA3YpiTBmwc1Fi5pdvFpM\",\n    authDomain: \"gigeco-project.firebaseapp.com\",\n    databaseURL: \"https://gigeco-project.firebaseio.com\",\n    projectId: \"gigeco-project\",\n    storageBucket: \"gigeco-project.appspot.com\",\n    messagingSenderId: \"975703800780\",\n    appId: \"1:975703800780:web:4a55530d3e349fcfa07b69\"\n  };","import React, { Component } from 'react';\nimport './App.css';\nimport LikertScale from './LikertScale';\nimport { demographics } from './Data.js';\nimport Button from 'react-bootstrap/Button';\n\nclass Demographics extends Component {\n    constructor(props) {\n        super(props);\n\n        this.skipStage = this.skipStage.bind(this);\n\n    }\n\n    skipStage() {\n        if(!this.props.checkDemographics()) {\n            alert(\"Please answer all questions.\");\n        } else {\n            this.props.skipStage();\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"Subtitle\">\n                    Please, answer the demographic questions below.\n                </div>\n                <hr/>\n                <div>\n                    {demographics.map((group, groupIdx) => (\n                        <div key={\"group\" + groupIdx}>\n                        {\n                            group.questions.map((question, qIdx) => (\n                                <div className=\"QuestionMargin\" key={\"dem\" + groupIdx + qIdx}>\n                                    <div key={\"dem\" + groupIdx + qIdx} className=\"Question\">\n                                        {question.text}\n                                    </div>\n                                    <LikertScale \n                                        key={question.id}\n                                        n={question.options.length} \n                                        currId={question.id}\n                                        saveResponse={this.props.saveResponse}\n                                        question={question.id}\n                                        multipleText={true}\n                                        answers={question.options}\n                                        //vertical={group.id === \"experience\" && question.id !== \"court\"}\n                                        demographics={true}/>\n                                </div>\n                            ))\n                        }\n                        <hr/>\n                        </div>\n                    ))}\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                    <Button variant=\"secondary\" onClick={this.skipStage}>Next</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Demographics;","import React, { Component } from 'react';\nimport './App.css';\nimport Consent from './Consent.js';\nimport data from './totalCombinations.json';\nimport Study from './Study.js';\nimport { getNRandomItems, demographicsIds, config } from './Data.js';\nimport Demographics from './Demographics.js';\nimport firebase from 'firebase';\nimport Button from 'react-bootstrap/Button';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: data[\"combinations\"],\n      currId: 0,\n      stages: [\"consent\", \"study\", \"demographics\", \"end\"],\n      time: {\n        \"init\": new Date()\n      },\n      pairs: this.getRandomPairs(),\n      responses: {}\n    }\n\n    this.saveTime = this.saveTime.bind(this);\n    this.skipStage = this.skipStage.bind(this);\n    this.saveResponse = this.saveResponse.bind(this);\n    this.checkIfSkip = this.checkIfSkip.bind(this);\n    this.checkDemographics = this.checkDemographics.bind(this);\n    this.saveToFirebase = this.saveToFirebase.bind(this);\n    this.redirectToSurveyCompletion = this.redirectToSurveyCompletion.bind(this);\n    this.checkChoice = this.checkChoice.bind(this);\n    this.checkJobEval = this.checkJobEval.bind(this);\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n  }\n  }\n\n  checkChoice(choice) {\n    return this.state.responses[choice];\n  }\n\n  checkJobEval(job) {\n    return this.state.responses[job];\n  }\n\n  checkDemographics() {\n    var count = 0;\n    for (var id in demographicsIds) {\n      if (demographicsIds[id] in this.state.responses) {\n        count = count + 1;\n      }\n    }\n    return count === demographicsIds.length;\n  }\n\n  saveToFirebase() {\n    const min = 1;\n    const max = 10000;\n    const rand = Math.round(min + Math.random() * (max - min));\n\n    var allResponses = this.state.responses;\n    const times = this.state.time;\n    for (var keyTime in times) {\n        allResponses[keyTime] = times[keyTime];\n    }\n\n    allResponses.pairs = this.state.pairs;\n\n    firebase.database().ref(\"/\" + rand).set(allResponses).catch(error => console.log(error)).then(() => this.redirectToSurveyCompletion());\n  }\n\n  redirectToSurveyCompletion() {\n    let path = 'https://google.com';\n    window.open(path, \"_self\");\n}\n\n  getRandomPairs() {\n    var n = 10;\n    var pairs = [];\n    for (let i = 0; i < n; i++) {\n      pairs = [...pairs, getNRandomItems(data[\"combinations\"], 2)];\n    }\n    return pairs;\n  }\n\n  checkIfSkip(varNames) {\n    for (var name in varNames) {\n      if (!(varNames[name] in this.state.responses)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  saveResponse(question, answer) {\n    var tmp = this.state.responses;\n    tmp[question] = answer;\n    this.setState({responses: tmp});\n  }\n\n  saveTime(nameTime) {\n    const delta_time = new Date() - this.state.time[\"init\"];\n    this.setState({time: {...this.state.time, [nameTime]: delta_time}});\n  }\n\n  skipStage() {\n    this.saveTime(this.state.stages[this.state.currId] + \"End\");\n    this.setState({currId: this.state.currId + 1});\n  }\n\n  render() {\n    let stage, content;\n    stage = this.state.stages[this.state.currId];\n    if (stage === \"consent\") {\n      content = <Consent skipStage={this.skipStage}/>\n    } else if (stage === \"study\") {\n      content = <Study skipStage={this.skipStage} pairs={this.state.pairs} saveResponse={this.saveResponse} checkIfSkip={this.checkIfSkip} saveTime={this.saveTime}\n      checkChoice={this.checkChoice} checkJobEval={this.checkJobEval}/>\n    } else if (stage === \"demographics\") {\n      content = <Demographics skipStage={this.skipStage} checkDemographics={this.checkDemographics} saveResponse={this.saveResponse}/>\n    } else if (stage === \"end\") {\n      content = <div>\n      <div className=\"Title\">Thank you for participating in our survey!</div>\n      <div className=\"Subtitle\">\n          Please be informed that all the job listings in this survey were created for the sake of this study. <br/>\n          If you have any questions, feel free to contact us at gcamilo7@gmail.com.\n          <hr/>\n      </div>\n      <div className=\"QuestionMargin\">\n          <span className=\"Title Spotlight RedSpotlight\">Click on the button below to complete the survey.</span>\n          <div className=\"QuestionMargin\">\n              <Button variant=\"secondary\" onClick={this.saveToFirebase}>Complete Survey</Button>\n          </div>\n      </div>\n    </div>; \n    } else {\n      content = \"Error 404\"\n    }\n\n    return(\n      <div className=\"App\">\n        {content}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}